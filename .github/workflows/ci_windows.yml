name: ci_windows
env:
  CMAKE_GENERATOR: Ninja

on:
  push:
    paths:
      - "**/CMakeLists.txt"
      - "**.cmake"
      - ".github/workflows/ci_windows.yml"
  pull_request:
  release:
    types: [published]


jobs:

  # default:
  #   # auto-builds HDF5 from source
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v2

  #   - run: cmake --preset=makewin
  #   - run: cmake --build build --parallel

  #   - run: ctest --parallel 2 --output-on-failure
  #     working-directory: build

  msys2:
    timeout-minutes: 15
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-gcc-fortran
          mingw-w64-x86_64-hdf5

    - uses: actions/checkout@v2

    - run: ctest -S setup.cmake -V

    # - run: cmake -S Examples -B Examples/build
    # - run: cmake --build Examples/build --parallel
    # - run: ctest --parallel 2 --output-on-failure
    #   working-directory: Examples/build

    - name: create package
      run: cpack --config build/CPackConfig.cmake

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: binary-archive
        path: build/package

    - name: get version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Upload release asset
      if: github.event.action == 'published'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/package/h5fortran-${{ steps.get_version.outputs.VERSION }}-win64.zip
        asset_name:  h5fortran-${{ steps.get_version.outputs.VERSION }}-win64.zip
        asset_content_type: application/zip
